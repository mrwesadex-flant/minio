---
- name: Manage MinIO TLS Configuration
  hosts: all
  gather_facts: true
  vars:
    tls: on  # change to 'off' to disable TLS
    minio_user: minio-user
    certs_local_dir: ~/development/minio/ansible/certs

  tasks:
    - name: Ensure remote certs dir exists
      when: tls == 'on'
      ansible.builtin.file:
        path: "/home/{{ minio_user }}/.minio/certs"
        state: directory
        owner: "{{ minio_user }}"
        mode: '0755'

    - name: Upload cert and key to nodes
      when: tls == 'on'
      ansible.builtin.copy:
        src: "{{ certs_local_dir }}/{{ item }}"
        dest: "/home/{{ minio_user }}/.minio/certs/{{ item }}"
        owner: "{{ minio_user }}"
        mode: '0600'
      loop:
        - public.crt
        - private.key

    - name: Upload CA cert to nodes
      when: tls == 'on'
      ansible.builtin.copy:
        src: "{{ certs_local_dir }}/{{ item }}"
        dest: "/etc/ssl/certs/minio-{{ item }}"
        mode: '0666'
      loop:
        - ca.crt


    - name: Remove certs from nodes if TLS is OFF
      when: tls == 'off'
      ansible.builtin.file:
        path: "/home/{{ minio_user }}/.minio/certs"
        state: absent

    - name: Update /etc/default/minio (http→https)
      when: tls == 'on'
      ansible.builtin.replace:
        path: /etc/default/minio
        regexp: 'http://'
        replace: 'https://'

    - name: Update /etc/default/minio (https→http)
      when: tls == 'off'
      ansible.builtin.replace:
        path: /etc/default/minio
        regexp: 'https://'
        replace: 'http://'

    - name: Restart minio service
      ansible.builtin.service:
        name: minio
        state: restarted
        enabled: true

    - name: Ensure minio is running
      ansible.builtin.service_facts:
      register: svc

    - name: Verify minio is active
      ansible.builtin.assert:
        that:
          - svc.ansible_facts.services['minio.service'].state == "running"
        fail_msg: "MinIO is not running on {{ inventory_hostname }}"
